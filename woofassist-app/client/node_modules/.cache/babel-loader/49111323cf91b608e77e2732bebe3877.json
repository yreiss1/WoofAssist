{"ast":null,"code":"var _jsxFileName = \"/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport DOA from \"./components/DOA\";\nimport AppGrid from \"./components/AppGrid\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: \"\",\n      post: \"\",\n      responseToPost: \"\"\n    };\n\n    this.callApi = async () => {\n      const response = await fetch(\"google.com\");\n      const body = await response;\n      console.log(\"This is the body:\" + JSON.stringify(body));\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch(\"/api/world\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(AppGrid, {\n      data: this.state.response,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/client/src/App.js"],"names":["React","Component","NavBar","DOA","AppGrid","App","state","response","post","responseToPost","callApi","fetch","body","console","log","JSON","stringify","status","Error","message","handleSubmit","e","preventDefault","method","headers","text","setState","componentDidMount","then","res","express","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,KADkB;;AAAA,SAW1BC,OAX0B,GAWhB,YAAY;AACpB,YAAMH,QAAQ,GAAG,MAAMI,KAAK,CAAC,YAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAML,QAAnB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAlC;AAEA,UAAIL,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACN,IAAI,CAACO,OAAN,CAAX;AAE7B,aAAOP,IAAP;AACD,KAnByB;;AAAA,SAqB1BQ,YArB0B,GAqBX,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMf,QAAQ,GAAG,MAAMI,KAAK,CAAC,YAAD,EAAe;AACzCY,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCZ,QAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAe;AAAER,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMI,IAAI,GAAG,MAAML,QAAQ,CAACkB,IAAT,EAAnB;AACA,WAAKC,QAAL,CAAc;AAAEjB,QAAAA,cAAc,EAAEG;AAAlB,OAAd;AACD,KAhCyB;AAAA;;AAM1Be,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,OAAL,GACGkB,IADH,CACQC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEnB,MAAAA,QAAQ,EAAEsB,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAInB,OAAO,CAACC,GAAR,CAAYkB,GAAZ,CAFhB;AAGD;;AAuBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAxCyB;;AA2C5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport DOA from \"./components/DOA\";\nimport AppGrid from \"./components/AppGrid\";\n\nclass App extends Component {\n  state = {\n    response: \"\",\n    post: \"\",\n    responseToPost: \"\"\n  };\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  callApi = async () => {\n    const response = await fetch(\"google.com\");\n    const body = await response;\n    console.log(\"This is the body:\" + JSON.stringify(body));\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/api/world\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ post: this.state.post })\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body });\n  };\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <AppGrid data={this.state.response} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}