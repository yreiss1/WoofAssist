{"ast":null,"code":"var _jsxFileName = \"/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/src/components/CommandList.js\";\nimport React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Command from \"./Command\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: \"\".concat(theme.spacing.unit * 4, \"px 0 \").concat(theme.spacing.unit * 2, \"px\")\n  }\n});\n\nclass CommandList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dense: false,\n      secondary: false,\n      commands: [{\n        command: \"Shut the fuck up Sparky\",\n        action: \"move\",\n        timestamp: 1234567\n      }, {\n        command: \"Sparky you're a peice of shit\",\n        action: \"move\",\n        timestamp: 87654332\n      }, {\n        command: \"Even though I verbally abuse you, you're still my best friend Sparky, don't leave me\",\n        action: \"priority\",\n        timestamp: 4134345\n      }]\n    };\n  }\n\n  getCommands() {\n    return this.state.commands;\n  }\n\n  render() {\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Type\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Command\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Timestamp\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Info\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, rows.map(row => React.createElement(TableRow, {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, row.calories), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, row.fat), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, row.carbs))))))\n    /*\n    <List style={{ padding: 24 }} dense={this.state.dense}>\n      {this.state.commands.map(command => (\n        <div>\n          <Command action={command.action} data={command.command} />\n          <li>\n            <Divider variant=\"inset\" />\n          </li>\n        </div>\n      ))}\n    </List>\n     */\n    ;\n  }\n\n}\n\nexport default withStyles(styles)(CommandList);","map":{"version":3,"sources":["/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/src/components/CommandList.js"],"names":["React","Component","List","withStyles","Divider","Command","styles","theme","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","unit","CommandList","state","dense","secondary","commands","command","action","timestamp","getCommands","render","classes","table","rows","map","row","id","name","calories","fat","carbs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport Command from \"./Command\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: `${theme.spacing.unit * 4}px 0 ${theme.spacing.unit * 2}px`\n  }\n});\n\nclass CommandList extends Component {\n  state = {\n    dense: false,\n    secondary: false,\n    commands: [\n      {\n        command: \"Shut the fuck up Sparky\",\n        action: \"move\",\n        timestamp: 1234567\n      },\n      {\n        command: \"Sparky you're a peice of shit\",\n        action: \"move\",\n        timestamp: 87654332\n      },\n      {\n        command:\n          \"Even though I verbally abuse you, you're still my best friend Sparky, don't leave me\",\n        action: \"priority\",\n        timestamp: 4134345\n      }\n    ]\n  };\n\n  getCommands() {\n    return this.state.commands;\n  }\n  render() {\n    return (\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Type</TableCell>\n              <TableCell align=\"right\">Command</TableCell>\n              <TableCell align=\"right\">Timestamp</TableCell>\n              <TableCell align=\"right\">Info</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n      /*\n      <List style={{ padding: 24 }} dense={this.state.dense}>\n        {this.state.commands.map(command => (\n          <div>\n            <Command action={command.action} data={command.command} />\n            <li>\n              <Divider variant=\"inset\" />\n            </li>\n          </div>\n        ))}\n      </List>\n\n      */\n    );\n  }\n}\nexport default withStyles(styles)(CommandList);\n"]},"metadata":{},"sourceType":"module"}