{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = RadarAxis;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultRadarAxisStyle = {\n  axisOverreach: 1.1,\n  labelOverreach: 1.2,\n  fontSize: 10,\n  fontFamily: \"sans-serif\",\n  textFill: \"black\",\n  axisWidth: 2\n};\n\nfunction RadarAxis(props) {\n  var scale = props.scale,\n      offsetAngle = props.offsetAngle,\n      domainMax = props.domainMax,\n      label = props.label,\n      color = props.color,\n      style = props.style,\n      onAxisLabelClick = props.onAxisLabelClick,\n      onAxisLabelMouseover = props.onAxisLabelMouseover,\n      variableKey = props.variableKey,\n      textStyle = props.textStyle;\n\n  var _defaultRadarAxisStyl = _objectSpread({}, defaultRadarAxisStyle, {\n    style: style\n  }),\n      axisOverreach = _defaultRadarAxisStyl.axisOverreach,\n      labelOverreach = _defaultRadarAxisStyl.labelOverreach,\n      fontSize = _defaultRadarAxisStyl.fontSize,\n      fontFamily = _defaultRadarAxisStyl.fontFamily,\n      textFill = _defaultRadarAxisStyl.textFill,\n      axisWidth = _defaultRadarAxisStyl.axisWidth;\n\n  var xFactor = Math.cos(offsetAngle - Math.PI / 2);\n  var yFactor = Math.sin(offsetAngle - Math.PI / 2);\n  var onClick = onAxisLabelClick ? function () {\n    return onAxisLabelClick({\n      variableKey: variableKey,\n      label: label\n    });\n  } : null;\n  var onMouseover = onAxisLabelMouseover ? function () {\n    return onAxisLabelMouseover({\n      variableKey: variableKey,\n      label: label\n    });\n  } : null;\n  return _react.default.createElement(\"g\", null, _react.default.createElement(\"line\", {\n    x1: 0,\n    y1: 0,\n    x2: scale(domainMax * axisOverreach) * xFactor,\n    y2: scale(domainMax * axisOverreach) * yFactor,\n    stroke: color,\n    strokeWidth: axisWidth\n  }), _react.default.createElement(\"text\", {\n    x: scale(domainMax * labelOverreach) * xFactor,\n    y: scale(domainMax * labelOverreach) * yFactor,\n    fontSize: fontSize,\n    fontFamily: fontFamily,\n    fill: textFill,\n    textAnchor: \"middle\",\n    dy: \"0.35em\",\n    onClick: onClick,\n    onMouseOver: onMouseover,\n    style: textStyle\n  }, label));\n}","map":null,"metadata":{},"sourceType":"script"}