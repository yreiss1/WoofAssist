{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = RadarCircle;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _round = _interopRequireDefault(require(\"lodash/round\"));\n\nvar _d3Shape = require(\"d3-shape\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultCircleStyle = {\n  selectedFillOpacity: 0.5,\n  inactiveFillOpacity: 0.2,\n  selectedStrokeOpacity: 1.0,\n  inactiveStrokeOpacity: 0.7,\n  pointRadius: 3,\n  selectedPointFill: \"white\",\n  selectedPointOpacity: 1.0,\n  inactivePointOpacity: 0.7\n};\n\nfunction RadarCircle(props) {\n  var points = props.points,\n      scales = props.scales,\n      offsetAngles = props.offsetAngles,\n      isSelected = props.isSelected,\n      color = props.color,\n      selectedVariableKey = props.selectedVariableKey,\n      style = props.style;\n\n  var _defaultCircleStyle$s = _objectSpread({}, defaultCircleStyle, style),\n      selectedFillOpacity = _defaultCircleStyle$s.selectedFillOpacity,\n      inactiveFillOpacity = _defaultCircleStyle$s.inactiveFillOpacity,\n      selectedStrokeOpacity = _defaultCircleStyle$s.selectedStrokeOpacity,\n      inactiveStrokeOpacity = _defaultCircleStyle$s.inactiveStrokeOpacity,\n      pointRadius = _defaultCircleStyle$s.pointRadius,\n      selectedPointFill = _defaultCircleStyle$s.selectedPointFill,\n      selectedPointOpacity = _defaultCircleStyle$s.selectedPointOpacity,\n      inactivePointOpacity = _defaultCircleStyle$s.inactivePointOpacity;\n\n  var lineFunction = (0, _d3Shape.radialLine)().radius(function (point) {\n    return scales[point.variableKey](point.value);\n  }).angle(function (point) {\n    return (0, _round.default)(offsetAngles[point.variableKey], 6);\n  }).curve(_d3Shape.curveCardinalClosed);\n  var pathData = lineFunction(points);\n  return _react.default.createElement(\"g\", null, _react.default.createElement(\"path\", {\n    d: pathData,\n    fill: color,\n    fillOpacity: isSelected ? selectedFillOpacity : inactiveFillOpacity,\n    stroke: color,\n    strokeOpacity: isSelected ? selectedStrokeOpacity : inactiveStrokeOpacity\n  }), points.map(function (point) {\n    return _react.default.createElement(\"circle\", {\n      key: point.key,\n      r: pointRadius,\n      fill: point.variableKey === selectedVariableKey ? selectedPointFill : color,\n      stroke: color,\n      cx: point.x,\n      cy: point.y,\n      opacity: isSelected ? selectedPointOpacity : inactivePointOpacity\n    });\n  }));\n}","map":null,"metadata":{},"sourceType":"script"}