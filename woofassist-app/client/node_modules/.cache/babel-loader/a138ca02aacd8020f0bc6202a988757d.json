{"ast":null,"code":"var _jsxFileName = \"/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/client/src/components/Map.js\";\n\n/* global google */\n\n/*\nimport React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\n*/\nimport React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  style: {\n    color: \"white\",\n    background: \"grey\",\n    padding: \"15px 10px\",\n    display: \"inline-flex\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"100%\",\n    transform: \"translate(-50%, -50%)\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, text);\n\nclass Map extends Component {\n  render() {\n    return (// Important! Always set the container height explicitly\n      React.createElement(\"div\", {\n        style: {\n          height: \"100vh\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyCJl7fJGVQIzKzjqfcSszowI79wuduqCTY\"\n        },\n        defaultCenter: this.props.center,\n        defaultZoom: this.props.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(AnyReactComponent, {\n        lat: 38.9911678,\n        lng: -76.9370398,\n        text: \"My Marker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n/*\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    navigator.geolocation.getCurrentPosition(location => {\n      //console.log(location.coords);\n      this.setState({ currentLocation: location.coords });\n    });\n  }\n  state = {\n    directions: this.currentLocation,\n    currentLocation: null\n  };\n\n  showLocation(location) {\n    //console.log(location.coords);\n    this.setState({ currentLocation: location.coords });\n  }\n\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n\n    const origin = { lat: 38.985945, lng: -76.945163 };\n    const destination = { lat: 38.992497, lng: -76.934413 };\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.WALKING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }\n\n  render() {\n    navigator.geolocation.getCurrentPosition(location => {\n      this.setState({ currentLocation: location.coords });\n    });\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{\n          lat: this.state.currentLocation\n            ? this.state.currentLocation.latitude\n            : 50,\n          lng: this.state.currentLocation\n            ? this.state.currentLocation.longitude\n            : 50\n        }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer directions={this.state.directions} />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          currentLocation={this.state.currentLocation}\n          containerElement={<div style={{ height: `500px`, width: \"500px\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }\n}\n*/\n\n\nMap.defaultProps = {\n  center: {\n    lat: 38.9911678,\n    lng: -76.9370398\n  },\n  zoom: 14\n};\nexport default Map; //const apiKey = \"AIzaSyCJl7fJGVQIzKzjqfcSszowI79wuduqCTY\";","map":{"version":3,"sources":["/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/client/src/components/Map.js"],"names":["React","Component","GoogleMapReact","AnyReactComponent","text","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","Map","render","height","width","key","props","center","zoom","defaultProps","lat","lng"],"mappings":";;AAAA;;AACA;;;;;;;;;AASA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACxB;AACE,EAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,OAAO,EAAE,WAHJ;AAILC,IAAAA,OAAO,EAAE,aAJJ;AAKLC,IAAAA,SAAS,EAAE,QALN;AAMLC,IAAAA,UAAU,EAAE,QANP;AAOLC,IAAAA,cAAc,EAAE,QAPX;AAQLC,IAAAA,YAAY,EAAE,MART;AASLC,IAAAA,SAAS,EAAE;AATN,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAaGT,IAbH,CADF;;AAkBA,MAAMU,GAAN,SAAkBb,SAAlB,CAA4B;AAS1Bc,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADpB;AAEE,QAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,MAF5B;AAGE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,IAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAE,UADP;AAEE,QAAA,GAAG,EAAE,CAAC,UAFR;AAGE,QAAA,IAAI,EAAC,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAFF;AAgBD;;AA1ByB;AA6B5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7BMP,G,CACGQ,Y,GAAe;AACpBF,EAAAA,MAAM,EAAE;AACNG,IAAAA,GAAG,EAAE,UADC;AAENC,IAAAA,GAAG,EAAE,CAAC;AAFA,GADY;AAKpBH,EAAAA,IAAI,EAAE;AALc,C;AAwGxB,eAAeP,GAAf,C,CAEA","sourcesContent":["/* global google */\n/*\nimport React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\n*/\nimport React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nconst AnyReactComponent = ({ text }) => (\n  <div\n    style={{\n      color: \"white\",\n      background: \"grey\",\n      padding: \"15px 10px\",\n      display: \"inline-flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: \"100%\",\n      transform: \"translate(-50%, -50%)\"\n    }}\n  >\n    {text}\n  </div>\n);\n\nclass Map extends Component {\n  static defaultProps = {\n    center: {\n      lat: 38.9911678,\n      lng: -76.9370398\n    },\n    zoom: 14\n  };\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyCJl7fJGVQIzKzjqfcSszowI79wuduqCTY\" }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <AnyReactComponent\n            lat={38.9911678}\n            lng={-76.9370398}\n            text=\"My Marker\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\n/*\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    navigator.geolocation.getCurrentPosition(location => {\n      //console.log(location.coords);\n      this.setState({ currentLocation: location.coords });\n    });\n  }\n  state = {\n    directions: this.currentLocation,\n    currentLocation: null\n  };\n\n  showLocation(location) {\n    //console.log(location.coords);\n    this.setState({ currentLocation: location.coords });\n  }\n\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n\n    const origin = { lat: 38.985945, lng: -76.945163 };\n    const destination = { lat: 38.992497, lng: -76.934413 };\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.WALKING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }\n\n  render() {\n    navigator.geolocation.getCurrentPosition(location => {\n      this.setState({ currentLocation: location.coords });\n    });\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{\n          lat: this.state.currentLocation\n            ? this.state.currentLocation.latitude\n            : 50,\n          lng: this.state.currentLocation\n            ? this.state.currentLocation.longitude\n            : 50\n        }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer directions={this.state.directions} />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          currentLocation={this.state.currentLocation}\n          containerElement={<div style={{ height: `500px`, width: \"500px\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }\n}\n*/\nexport default Map;\n\n//const apiKey = \"AIzaSyCJl7fJGVQIzKzjqfcSszowI79wuduqCTY\";\n"]},"metadata":{},"sourceType":"module"}