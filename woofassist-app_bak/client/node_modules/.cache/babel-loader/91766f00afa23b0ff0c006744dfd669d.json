{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flatMapDeepArray = flatMapDeepArray;\nexports.forEachArray = forEachArray;\nexports.radiusScales = radiusScales;\nexports.radarPoints = radarPoints;\n\nvar _flatMapDeep = _interopRequireDefault(require(\"lodash/flatMapDeep\"));\n\nvar _forEach = _interopRequireDefault(require(\"lodash/forEach\"));\n\nvar _sortBy = _interopRequireDefault(require(\"lodash/sortBy\"));\n\nvar _indexOf = _interopRequireDefault(require(\"lodash/indexOf\"));\n\nvar _d3Scale = require(\"d3-scale\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction flatMapDeepArray(collection, fn) {\n  return (0, _flatMapDeep.default)(collection, fn);\n}\n\nfunction forEachArray(collection, fn) {\n  (0, _forEach.default)(collection, fn);\n}\n\nfunction radiusScales(variables, domainMax, radius) {\n  var res = {};\n  (0, _forEach.default)(variables, function (_ref) {\n    var key = _ref.key;\n    var scale = (0, _d3Scale.scaleLinear)().domain([0, domainMax]).range([0, radius]);\n    res[key] = scale;\n  });\n  return res;\n}\n\nfunction radarPoints(data, scales, offsetAngles) {\n  var allVariableKeys = data.variables.map(function (variable) {\n    return variable.key;\n  });\n  return data.sets.map(function (_ref2) {\n    var key = _ref2.key,\n        values = _ref2.values,\n        rest = _objectWithoutProperties(_ref2, [\"key\", \"values\"]);\n\n    var points = [];\n    (0, _forEach.default)(values, function (value, variableKey) {\n      var scale = scales[variableKey];\n      var offsetAngle = offsetAngles[variableKey];\n\n      if (scale === undefined || offsetAngle === undefined) {\n        return;\n      }\n\n      var x = scale(value) * Math.cos(offsetAngle - Math.PI / 2);\n      var y = scale(value) * Math.sin(offsetAngle - Math.PI / 2);\n      var point = {\n        x: x,\n        y: y,\n        value: value,\n        setKey: key,\n        variableKey: variableKey,\n        key: \"\".concat(key, \"--\").concat(variableKey)\n      };\n      points.push(point);\n    });\n    var sortedPoints = (0, _sortBy.default)(points, function (point) {\n      var pointVariableKey = point.variableKey;\n      return (0, _indexOf.default)(allVariableKeys, pointVariableKey);\n    });\n    return _objectSpread({\n      setKey: key,\n      points: sortedPoints\n    }, rest);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}