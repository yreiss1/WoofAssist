{"ast":null,"code":"var _jsxFileName = \"/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/src/components/Map.js\";\n\n/* global google */\nimport React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      directions: navigator.geolocation.getCurrentPosition(this.showLocation),\n      currentLocation: null\n    };\n    navigator.geolocation.getCurrentPosition(this.showLocation);\n  }\n\n  showLocation(location) {\n    console.log(location.coords);\n    setState({\n      currentLocation: location.coords\n    });\n  }\n\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n    const origin = {\n      lat: 40.756795,\n      lng: -73.954298\n    };\n    const destination = {\n      lat: 41.756795,\n      lng: -78.954298\n    };\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result\n        });\n      } else {\n        console.error(\"error fetching directions \".concat(result));\n      }\n    });\n  }\n\n  render() {\n    const GoogleMapExample = withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: 40.756795,\n        lng: -73.954298\n      },\n      defaultZoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(GoogleMapExample, {\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          width: \"500px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map; //const apiKey = \"AIzaSyCJl7fJGVQIzKzjqfcSszowI79wuduqCTY\";","map":{"version":3,"sources":["/Users/yuvalreiss/Documents/UMD/CMSC818W/woofassist-app/src/components/Map.js"],"names":["React","Component","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Map","constructor","props","state","directions","navigator","geolocation","getCurrentPosition","showLocation","currentLocation","location","console","log","coords","setState","componentDidMount","directionsService","google","maps","DirectionsService","origin","lat","lng","destination","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","error","render","GoogleMapExample","height","width"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,kBAJF,QAKO,mBALP;;AAMA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,UAAU,EAAEC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKC,YAA9C,CADN;AAENC,MAAAA,eAAe,EAAE;AAFX,KAJW;AAEjBJ,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKC,YAA9C;AACD;;AAMDA,EAAAA,YAAY,CAACE,QAAD,EAAW;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB;AACAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,eAAe,EAAEC,QAAQ,CAACG;AAA5B,KAAD,CAAR;AACD;;AACDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AAEA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KAAf;AACA,UAAMC,WAAW,GAAG;AAAEF,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KAApB;AAEAN,IAAAA,iBAAiB,CAACQ,KAAlB,CACE;AACEJ,MAAAA,MAAM,EAAEA,MADV;AAEEG,MAAAA,WAAW,EAAEA,WAFf;AAGEE,MAAAA,UAAU,EAAER,MAAM,CAACC,IAAP,CAAYQ,UAAZ,CAAuBC;AAHrC,KADF,EAME,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClB,UAAIA,MAAM,KAAKZ,MAAM,CAACC,IAAP,CAAYY,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C,aAAKjB,QAAL,CAAc;AACZV,UAAAA,UAAU,EAAEwB;AADA,SAAd;AAGD,OAJD,MAIO;AACLjB,QAAAA,OAAO,CAACqB,KAAR,qCAA2CJ,MAA3C;AACD;AACF,KAdH;AAgBD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAGtC,aAAa,CAACM,KAAK,IAC1C,oBAAC,SAAD;AACE,MAAA,aAAa,EAAE;AAAEmB,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OADjB;AAEE,MAAA,WAAW,EAAE,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,kBAAD;AAAoB,MAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADoC,CAAtC;AASA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,gBAAgB,EAAE;AAAK,QAAA,KAAK,EAAE;AAAE+B,UAAAA,MAAM,SAAR;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpB;AAEE,MAAA,UAAU,EAAE;AAAK,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAM;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AAxDyB;;AA2D5B,eAAenC,GAAf,C,CAEA","sourcesContent":["/* global google */\nimport React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    navigator.geolocation.getCurrentPosition(this.showLocation);\n  }\n  state = {\n    directions: navigator.geolocation.getCurrentPosition(this.showLocation),\n    currentLocation: null\n  };\n\n  showLocation(location) {\n    console.log(location.coords);\n    setState({ currentLocation: location.coords });\n  }\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n\n    const origin = { lat: 40.756795, lng: -73.954298 };\n    const destination = { lat: 41.756795, lng: -78.954298 };\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }\n\n  render() {\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer directions={this.state.directions} />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          containerElement={<div style={{ height: `500px`, width: \"500px\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\n//const apiKey = \"AIzaSyCJl7fJGVQIzKzjqfcSszowI79wuduqCTY\";\n"]},"metadata":{},"sourceType":"module"}