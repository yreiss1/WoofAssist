{"version":3,"sources":["../src/factory.js"],"names":["eventNames","updateEvents","isBrowser","window","plotComponentFactory","Plotly","PlotlyComponent","props","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","then","el","error","unmounting","Error","reason","react","data","layout","config","frames","catch","err","console","onError","onInitialized","prevProps","numPrevFrames","length","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","removeEventListener","removeUpdateEvents","purge","removeListener","forEach","updateEvent","on","callback","_transitionData","_frames","figure","invoke","useResizeHandler","Plots","resize","addEventListener","debug","gd","eventName","prop","hasHandler","Boolean","toLowerCase","divId","style","className","Component","propTypes","PropTypes","arrayOf","object","number","func","bool","string","defaultProps","position","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_doubleclick',\n  'plotly_animated',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (!this.el) {\n            let error;\n            if (this.unmounting) {\n              error = new Error('Component is unmounting');\n              error.reason = 'unmounting';\n            } else {\n              error = new Error('Missing element reference');\n            }\n            throw error;\n          }\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => this.syncWindowResize(shouldInvokeResizeHandler))\n        .then(this.syncEventHandlers)\n        .then(() => this.figureCallback(figureCallbackFunction))\n        .then(shouldAttachUpdateEvents ? this.attachUpdateEvents : () => {})\n        .catch(err => {\n          if (err.reason === 'unmounting') {\n            return;\n          }\n          console.error('Error while plotting:', err); // eslint-disable-line no-console\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach(updateEvent => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach(updateEvent => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach(eventName => {\n        const prop = this.props['on' + eventName];\n        const hasHandler = Boolean(this.handlers[eventName]);\n\n        if (prop && !hasHandler) {\n          this.handlers[eventName] = prop;\n          this.el.on('plotly_' + eventName.toLowerCase(), this.handlers[eventName]);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.el.removeListener('plotly_' + eventName.toLowerCase(), this.handlers[eventName]);\n          delete this.handlers[eventName];\n        }\n      });\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach(eventName => {\n    PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n"],"file":"factory.js"}